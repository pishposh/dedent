exports[`dedent another nested text 1`] = `
"{
  int a;
  struct {
    int a;
    int b;
  } foo;
  int b;
}"
`;

exports[`dedent can be used as a function 1`] = `"A test argument."`;

exports[`dedent doesn't strip exlicit newlines 1`] = `
"<p>Hello world!</p>
"
`;

exports[`dedent doesn't strip exlicit newlines with mindent 1`] = `
"<p>
  Hello world!
</p>
"
`;

exports[`dedent escapes backticks 1`] = `"\`"`;

exports[`dedent handles zero indent 1`] = `
"First line
  Second line"
`;

exports[`dedent ignores first line indent 1`] = `
"{
  int a;
  int b;
}"
`;

exports[`dedent single line input works with single line and closing backtick on newline 1`] = `"A single line of input."`;

exports[`dedent single line input works with single line and inline closing backtick 1`] = `"A single line of input."`;

exports[`dedent single line input works with single line input 1`] = `"A single line of input."`;

exports[`dedent works with blank first line 1`] = `
"Some text that I might want to indent:
  * reasons
  * fun
That\'s all."
`;

exports[`dedent works with dedent interpolation 1`] = `
"first
  second
  third
fourth"
`;

exports[`dedent works with inline interpolation 1`] = `
"first second
third fourth"
`;

exports[`dedent works with interpolation 1`] = `
"first line
second
third"
`;

exports[`dedent works with multiline interpolation 1`] = `
"first
  second
  third
fourth"
`;

exports[`dedent works with multiple blank first lines 1`] = `
"first
second
third"
`;

exports[`dedent works with removing same number of spaces 1`] = `
"first
   second
      third"
`;

exports[`dedent works with suppressed newlines 1`] = `
"first second
third"
`;

exports[`dedent works without interpolation 1`] = `
"first
second
third"
`;
